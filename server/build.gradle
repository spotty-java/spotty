plugins {
    id 'com.github.johnrengelman.shadow'
}

dependencies {
    implementation project(":common")

    testImplementation "org.apache.httpcomponents:httpclient:$apacheHttpClientVersion"
    testImplementation testFixtures(project(":common"))
}

ext {
    shadowJarVersion = project.findProperty('buildShadowJarVersion') ?: project.version
}

shadowJar {
    archivesBaseName = rootProject.name
    archiveVersion = shadowJarVersion
    zip64 = true
    mergeServiceFiles()
}

build.dependsOn += shadowJar

def spottySrc = "$buildDir/generated/sources/spotty/java/main"
sourceSets {
    main {
        java {
            srcDir spottySrc
        }
    }
}

task spottyVersionTask {
    doLast {
        def file = file("$spottySrc/spotty/version/SpottyVersion.java")
        if (!file.exists()) {
            file.parentFile.mkdirs()
        }

        file.text = """
            package spotty.version;
        
            public final class SpottyVersion { 
                public static final String VERSION = "$version"; 
            }
        """.stripIndent().trim()
    }
}

compileJava.dependsOn spottyVersionTask